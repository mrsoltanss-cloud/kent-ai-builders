generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ---------- Enums ----------
enum Role {
  HOMEOWNER
  TRADER
  ADMIN
}

enum LeadStatus {
  NEW
  DELIVERED
  QUEUED
  FAILED
}

enum PropertyType {
  DETACHED
  SEMI
  TERRACE
  FLAT
  BUNGALOW
  OTHER
}

enum AgeBand {
  PRE_1950
  Y1950_2000
  POST_2000
  UNKNOWN
}

enum FinishLevel {
  BASIC
  STANDARD
  PREMIUM
}

enum AccessLevel {
  GOOD
  LIMITED
  SCAFFOLD_LIKELY
}

enum PlanningStatus {
  APPROVED
  PENDING
  NOT_REQUIRED
  UNSURE
}

enum Urgency {
  ASAP
  M1_3
  M3_6
  FLEXIBLE
}

// ---------- Models ----------
model User {
  id        String   @id @default(cuid())
  email     String   @unique
  // Map to existing DB column so we DON'T drop data:
  password  String?  @map("passwordHash")
  name      String?
  role      Role     @default(HOMEOWNER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Lead {
  id          String       @id @default(cuid())

  // Existing basics
  service     String
  description String
  budgetMin   Int?
  budgetMax   Int?
  timeline    String?      // legacy free text

  // New structured fields
  areaSqm       Int?
  rooms         Int?
  postcode      String?
  propertyType  PropertyType?
  ageBand       AgeBand?
  structuralChanges Boolean?
  finishLevel   FinishLevel?
  accessLevel   AccessLevel?
  parking       Boolean?
  planning      PlanningStatus?
  urgency       Urgency?

  // Uploads (store light metadata for now)
  attachmentsMeta Json?

  // Lead metadata
  name        String?
  email       String?
  phone       String?
  source      String?
  status      LeadStatus  @default(NEW)
  deliveredAt DateTime?

  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}
